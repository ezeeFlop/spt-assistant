# Stage 1: Build Frontend
FROM node:20-alpine AS frontend-builder

WORKDIR /app/frontend

# Copy package files and install dependencies
COPY frontend/package.json frontend/package-lock.json* ./
RUN npm install 

# Copy the rest of the frontend code
COPY frontend/ ./

# Build the frontend
# Assuming your build script outputs to /app/frontend/dist
RUN npm run build
COPY frontend/config.js /app/frontend/dist/config.js

# Stage 2: Python Backend (FastAPI)
FROM python:3.12-slim

LABEL maintainer="Christophe Verdier <christophe.verdier@sponge-theory.ai>"
LABEL description="API service for the Voice Assistant Platform"

ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=off \
    PIP_DISABLE_PIP_VERSION_CHECK=on \
    PIP_DEFAULT_TIMEOUT=100 \
    PATH="/app/.local/bin:$PATH"

# Install uv
RUN pip install uv

WORKDIR /app

# Copy dependency files for the API
COPY pyproject.toml app/uv.lock* ./
ENV PATH="/root/.local/bin/:/app/.venv/bin/:$PATH"

RUN uv venv && \
    . .venv/bin/activate
RUN uv sync

# Copy the FastAPI application code
COPY ./app /app/app

# Copy the built frontend from the builder stage
COPY --from=frontend-builder /app/frontend/dist /app/frontend


EXPOSE 8301
RUN echo '#!/bin/bash\n\
echo "Starting FastAPI application..."\n\
cd /app && uvicorn app.main:app --host 0.0.0.0 --port 8301\n\
' > /app/start.sh \
    && chmod +x /app/start.sh
CMD ["/app/start.sh"]