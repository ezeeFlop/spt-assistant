# Stage 1: Build Frontend
FROM node:20-alpine AS frontend-builder

WORKDIR /app/frontend

# Copy package files and install dependencies
COPY frontend/package.json frontend/package-lock.json* ./
RUN npm install 

# Copy the rest of the frontend code
COPY frontend/ ./

# Build the frontend
# Assuming your build script outputs to /app/frontend/dist
RUN npm run build

# Stage 2: Python Backend (FastAPI)
FROM python:3.12-slim

LABEL maintainer="Your Name <you@example.com>"
LABEL description="API service for the Voice Assistant Platform"

ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=off \
    PIP_DISABLE_PIP_VERSION_CHECK=on \
    PIP_DEFAULT_TIMEOUT=100 \
    PATH="/app/.local/bin:$PATH"

# Install uv
RUN pip install uv

WORKDIR /app

# Create a non-root user and group
RUN groupadd -r appuser && useradd -r -g appuser -d /app -s /sbin/nologin -c "Docker image user" appuser

# Copy dependency files for the API
COPY pyproject.toml app/uv.lock* ./

# Install backend dependencies using uv
# Ensure the uv.lock file is generated with `uv lock` before building
RUN uv sync

# Copy the FastAPI application code
COPY ./app /app/app

# Copy the built frontend from the builder stage
COPY --from=frontend-builder /app/frontend/dist /app/static_frontend

# Ensure the app directory and its contents are owned by the appuser
RUN chown -R appuser:appuser /app

# Switch to the non-root user
USER appuser

EXPOSE 8000

# Command to run the FastAPI application using Uvicorn
CMD ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"] 