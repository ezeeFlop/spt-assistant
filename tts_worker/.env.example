# tts_worker/.env.example

# Redis Settings
REDIS_HOST=localhost
REDIS_PORT=6379
# REDIS_DB=0
# REDIS_PASSWORD=your_redis_password

# Logging Level
LOG_LEVEL=INFO # DEBUG, INFO, WARNING, ERROR, CRITICAL

# --- TTS Provider Selection ---
# Choose ONE provider: "piper", "coqui", or "elevenlabs"
TTS_PROVIDER="piper"

# --- Piper TTS Settings (if TTS_PROVIDER="piper") ---
# Ensure these paths are correct for your Piper installation
PIPER__EXECUTABLE_PATH="/path/to/your/piper/executable" # IMPORTANT: Absolute path to the Piper executable
PIPER__VOICES_DIR="/path/to/your/piper_voices/" # IMPORTANT: Absolute path to the directory containing Piper voice model files (.onnx and .json)
PIPER__DEFAULT_VOICE_MODEL="fr_FR-siwis-medium.onnx" # Default voice model file name (must be in PIPER_VOICES_DIR)
# PIPER__NATIVE_SAMPLE_RATE=22050 # Sample rate of your Piper voice model (check model's .json config)

# --- Coqui TTS Settings (if TTS_PROVIDER="coqui") ---
# These settings are relevant if you are running Coqui TTS as a local server
# or using its Python library directly in a way that these settings apply.
# If Coqui TTS is a remote server, you might only need COQUI__SERVER_URL (if your worker uses HTTP requests)
# The current config.py loads COQUI__DEFAULT_MODEL_NAME, COQUI__DEFAULT_LANGUAGE, COQUI__NATIVE_SAMPLE_RATE
# COQUI__SERVER_URL="http://localhost:5002" # If tts_worker makes HTTP calls to a Coqui server
COQUI__DEFAULT_MODEL_NAME="tts_models/fr/fairseq/vits" # Example model for Coqui TTS library
COQUI__DEFAULT_LANGUAGE="fr"
# COQUI__NATIVE_SAMPLE_RATE=24000 # Coqui XTTS is often 24kHz

# --- ElevenLabs Settings (if TTS_PROVIDER="elevenlabs") ---
# ELEVENLABS__API_KEY="YOUR_ELEVENLABS_API_KEY"
# ELEVENLABS__DEFAULT_VOICE_ID="pNInz6obpgDQGcFmaJgB" # Example: Rachel

# --- Common Audio Output Settings ---
# These define the audio format the TTS worker will produce.
# If the native sample rate of the chosen TTS model differs, resampling might occur.
AUDIO_OUTPUT_SAMPLE_RATE=24000 # Target output sample rate for the client
# AUDIO_OUTPUT_CHANNELS=1
# AUDIO_OUTPUT_SAMPLE_WIDTH=2 # Bytes per sample (16-bit PCM = 2 bytes)
# TTS_AUDIO_CHUNK_SIZE_MS=100 # How frequently to send audio chunks