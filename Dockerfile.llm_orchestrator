# llm_orchestrator_worker/Dockerfile or Dockerfile.llm_orchestrator
FROM python:3.12-slim

LABEL maintainer="Christophe Verdier <christophe.verdier@sponge-theory.ai>"
LABEL description="LLM Orchestrator Worker for the Voice Assistant Platform"

ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=off \
    PIP_DISABLE_PIP_VERSION_CHECK=on \
    PIP_DEFAULT_TIMEOUT=100 \
    PATH="/app/.local/bin:$PATH"

# Set NLTK_DATA environment variable
ENV NLTK_DATA /usr/share/nltk_data

# Install uv
RUN pip install uv

# Create a non-root user and group
WORKDIR /app

# Copy dependency files for the LLM Orchestrator worker
COPY llm_orchestrator_worker/pyproject.toml llm_orchestrator_worker/uv.lock* ./
ENV PATH="/root/.local/bin/:/app/.venv/bin/:$PATH"

RUN uv venv && \
    . .venv/bin/activate
# Install dependencies using uv
RUN uv sync

# Download NLTK data
RUN python -m nltk.downloader -d /usr/share/nltk_data punkt
RUN python -m nltk.downloader -d /usr/share/nltk_data punkt_tab

# Copy the worker application code
COPY ./llm_orchestrator_worker /app/llm_orchestrator_worker


# Command to run the LLM Orchestrator worker
CMD ["python", "-m", "llm_orchestrator_worker.main"] 